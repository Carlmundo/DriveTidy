<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>