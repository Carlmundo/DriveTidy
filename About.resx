<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>